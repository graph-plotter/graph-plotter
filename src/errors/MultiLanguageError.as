package errors{
	import languages.*;
	/*
	* "абстрактный" класс, служит родителем всех многоязыковых ошибок приложения
	* отличие от обычной ошибки - способность выдавать разные сообщения в зависимости от выбранного языка
	*/
	public class MultiLanguageError extends Error {

		//=====================================
		//поля
		//-------------------------------------
		//------- принадлежащие объекту -------
		/// текущий язык приложения (задается у потомков)
		//public static var language:int = 0;
		/// язык, на котором написано отформатированное сообщение
		protected var oldLanguage:int = -1;

		
		
		//=====================================
		//свойства
		//-------------------------------------
		//------- принадлежащие объекту -------
		/// сообщение ошибки (только чтение)
		public function get Message():String
		{
			if (Lang.Current != oldLanguage) {
				generateMessage();
				oldLanguage = Lang.Current;
			}
			return message;
		}

		
		
		//=====================================
		//методы
		//-------------------------------------
		//------- принадлежащие объекту -------
		/// пустая функция генерации сообщения ошибки
		protected function generateMessage():void
		{}

		/// возвращает сгенерированное сообщение ошибки на текущем языке
		public function toString():String
		{return message}
	}
}